{"version":3,"sources":["axios.js","store/actions/actionTypes.js","store/actions/auth.js","components/Lobby.js","websocket.js","components/Chat.js","components/Login.js","components/Signup.js","components/users/ResetPass.js","components/users/NewPass.js","components/users/datosPerfil.js","components/servicios/internet.js","components/servicios/jovenClub.js","components/servicios/emby.js","components/servicios/fileZilla.js","components/coins/Recarga.js","components/coins/Transfer.js","components/coins/UltOpe.js","routes.js","components/Sidepanel.js","components/Layout.js","App.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["axiosInstance","axios","create","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","a","error","undefined","alert","Promise","reject","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","GET_PROFILE","GET_SERVICES","STOP_ERASE","authStart","type","actionTypes","stopErase","authSuccess","username","token","authFail","logout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","getProfile","get","then","res","profile","data","catch","status","console","log","getServices","services","contentStyle","marginTop","height","color","lineHeight","textAlign","background","App","className","style","autoplay","WebSocketService","callbacks","this","socketRef","chatID","path","WebSocket","onopen","socketNewMessage","JSON","stringify","command","onmessage","e","onerror","message","onclose","connect","parsedData","parse","Object","keys","length","messages","participants","sendMessage","sender","content","messagesCallback","newMessageCallback","send","err","readyState","instance","WebSocketInstance","getInstance","Chat","props","addMessage","setState","state","addResponseMessage","setMessages","reverse","map","senderReceiver","p","user","receiver","messageChangeHandler","event","target","value","sendMessageHandler","preventDefault","messageObject","match","params","newChatMessage","renderMessages","currentUser","i","Math","round","Date","getTime","timestamp","id","llegoMessage","newMessage","handleNewUserMessage","waitForSocketConnection","addCallbacks","bind","fetchMessages","callback","component","listStyle","onSubmit","onChange","required","placeholder","title","subtitle","senderPlaceHolder","profileAvatar","titleAvatar","React","Component","Title","Typography","Login","onFinish","values","onAuth","password","stop","isAuthenticated","to","span","offset","maxWidth","margin","padding","border","boxShadow","tip","spinning","loading","level","name","initialValues","remember","Item","rules","prefix","UserOutlined","Password","LockOutlined","htmlType","width","post","key","expirationDate","setItem","actions","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","Signup","email","confirm","scrollToFirstError","label","whitespace","MailOutlined","hasFeedback","dependencies","getFieldValue","validator","_","resolve","float","password1","password2","ResetPass","success","history","push","Newpass","uid","new_password1","new_password2","layout","DatosPerfil","getUser","put","first_name","nombre","last_name","apellidos","Grid","fontSize","date_joined","last_login","QuestionCircleOutlined","Text","Option","Select","Modal","Countdown","Statistic","Internet","internet","info","tipo","horas","costoHoras","coins","icon","ExclamationCircleOutlined","onOk","int_horas","cantidad","contra","perfil","servicio","timeOver","handleSwitch","int_auto","fechaActual","fechaMes","setDate","getDate","text","int_time","format","href","extra","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","checked","shouldUpdate","prevValues","currentValues","PayCircleOutlined","noStyle","JovenClub","jc","jc_auto","jc_time","toLocaleString","Emby","emby","emby_auto","emby_time","FileZilla","ftp","ftp_auto","ftp_time","Recarga","code","usuario","mensaje","orientation","Transfer","UltOpe","opers","columns","dataIndex","dataSource","BaseRouter","exact","Lobby","NewPass","Perfil","UltimasOp","Sider","Layout","SubMenu","Menu","SidePanel","breakpoint","collapsedWidth","theme","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","LaptopOutlined","Header","Content","Footer","CustomLayout","changeTheme","onClick","paddingRight","count","overflowCount","backgroundColor","notificaciones","size","src","imagen","Sidepanel","minHeight","children","position","bottom","fontStyle","withRouter","onTryAutoSignup","updateObject","oldObject","updatedProperties","initialState","action","authLogout","reducer","composeEnhances","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3e8b1ba.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL = 'https://qbared.com/api/';\r\n\r\nconst axiosInstance = axios.create({\r\n\tbaseURL: baseURL,\r\n\ttimeout: 20000,\t\r\n\theaders: {\t\t\r\n\t\tAuthorization: `Token ${localStorage.getItem('token') ? localStorage.getItem('token') : null}`,\r\n\t\t'Content-Type': 'application/json',\r\n\t\taccept: 'application/json',\r\n\t}, \r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n\t(response) => {\r\n\t\treturn response;\r\n\t},\r\n\tasync function (error) {\r\n\t\tif (typeof error.response === undefined) {\r\n\t\t\talert(\r\n\t\t\t\t'No se pudo conectar con el servidor, intente mas tarde. Disculpe las molestias.'\r\n\t\t\t);\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\t\t\r\n\t\treturn Promise.reject(error);\t\t\r\n\t}\r\n);\r\n\r\nexport default axiosInstance;","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_SERVICES = 'GET_SERVICES';\r\n\r\nexport const STOP_ERASE = 'STOP_ERASE';","import axiosInstance from '../../axios';\r\nimport axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const stopErase = () => {\r\n    return {\r\n        type: actionTypes.STOP_ERASE\r\n    }\r\n}\r\n\r\nexport const authSuccess = (username, token) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        username: username\r\n    }\r\n}\r\n\r\nexport const authFail = error => {       \r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('expirationDate');     \r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('https://qbared.com/api/users/auth/login/', {\r\n            username: username,\r\n            password: password\r\n        })\r\n        .then((response) => {           \r\n            if (response !== undefined) {\r\n                if (response.status === 200) {                   \r\n                    const token = response.data.key;\r\n                    const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n                    localStorage.setItem('token', token);\r\n                    localStorage.setItem(\"username\", username);\r\n                    localStorage.setItem('expirationdate', expirationDate);\r\n                    dispatch(authSuccess(username, token));\r\n                    dispatch(checkAuthTimeout(3600));\r\n                    dispatch(getProfile(username));                   \r\n                    dispatch(getServices(username));                                      \r\n                } \r\n            } else {\r\n                console.log(response)\r\n            }\r\n        })\r\n        .catch(error => { \r\n            if (error.response) {\r\n                if (error.response.status === 500) {\r\n                    dispatch(authFail(\"Error en el servidor, vuelva a intentarlo\"))\r\n                } else if (error.response.status === 401 || error.response.status === 403) {\r\n                    dispatch(authFail(\"DESAUTORIZADO\"))\r\n                } else {\r\n                    var i;\r\n                    for (i in error.response.data) {                    \r\n                        dispatch(authFail(error.response.data[i][0]))\r\n                    }  \r\n                }              \r\n            } else {\r\n                console.log(error);                \r\n            }            \r\n        })\r\n    }\r\n}\r\n\r\nexport const authSignUp = (username, email, password1, password2) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('https://qbared.com/api/users/auth/registration/', {\r\n            username: username,\r\n            email: email,\r\n            password1: password1,\r\n            password2: password2,\r\n        })\r\n        .then(res => {\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem(\"username\", username);\r\n            localStorage.setItem('expirationdate', expirationDate);\r\n            dispatch(authSuccess(username, token));\r\n            dispatch(checkAuthTimeout(3600));\r\n            dispatch(getProfile(username));                   \r\n            dispatch(getServices(username));\r\n        })\r\n        .catch(error => {   \r\n            if (error.response) { \r\n                if (error.response.status === 500) {\r\n                    dispatch(authFail(\"Error en el servidor, vuelva a intentarlo\"))\r\n                } else {              \r\n                    var i;\r\n                    for (i in error.response.data) {                    \r\n                        dispatch(authFail(error.response.data[i][0]))\r\n                    }\r\n                }\r\n            } else {\r\n                console.log(error)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        const username = localStorage.getItem(\"username\");\r\n        if (token === undefined) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationdate'));\r\n            if ( expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(authSuccess(username, token));\r\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000));\r\n                dispatch(getProfile(username));                   \r\n                dispatch(getServices(username));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateProfile = (profile) => {\r\n    return {\r\n        type: actionTypes.GET_PROFILE,\r\n        profile: profile\r\n    }\r\n}\r\n\r\nexport const getProfile = (username) => {\r\n    return dispatch => {\r\n        axiosInstance\r\n        .get(`users/profile/${ username }/`)\r\n        .then((res) => {\r\n            if (res !== undefined) {\r\n                dispatch(updateProfile(res.data))            \r\n            }\r\n        })  \r\n        .catch(error => {\r\n            if (error.response) {\r\n                if (error.response.status === 404) {\r\n                    console.log(\"No se encontró el perfil\")\r\n                } else if (error.response.status === 401 || error.response.status === 403) {\r\n                    console.log(\"Desautorizado\")\r\n                } else {\r\n                    console.log(error.response)\r\n                }\r\n            } else {\r\n                console.log(error)\r\n            }\r\n        })       \r\n    }\r\n}\r\n\r\nexport const updateServices = (services) => {\r\n    return {\r\n        type: actionTypes.GET_SERVICES,\r\n        services: services\r\n    }\r\n}\r\n\r\nexport const getServices = (username) => {\r\n    return dispatch => {\r\n        axiosInstance\r\n        .get(`servicios/${ username }/`)\r\n        .then((res) => {\r\n            if (res !== undefined) {\r\n                dispatch(updateServices(res.data))            \r\n            }\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                if (error.response.status === 404) {\r\n                    console.log(\"No se encontró el servicio\")                \r\n                } else if (error.response.status === 401 || error.response.status === 403) {\r\n                    console.log(\"Desautorizado\")\r\n                } else {\r\n                    console.log(error.response)\r\n                }\r\n            } else {\r\n                console.log(error)\r\n            }\r\n        })        \r\n    }\r\n}","import React from 'react';\r\nimport { Carousel, Divider } from 'antd';\r\n\r\nconst contentStyle = {\r\n  marginTop: '15px',\r\n  height: '160px',\r\n  color: '#fff',\r\n  lineHeight: '160px',\r\n  textAlign: 'center',\r\n  background: '#364d79',\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\" style={{textAlign: \"center\"}}> \r\n        <Carousel autoplay>\r\n          <div>\r\n            <h3 style={contentStyle}>\r\n              Bienvenidos al Portal del usuario de la QbaRed, aquí podrá administrar sus servicios y ver su estado.\r\n            </h3>\r\n          </div>\r\n          <div>\r\n            <h3 style={contentStyle}>\r\n              Para comenzar seleccione en el menú la opción que desee.\r\n              </h3>\r\n          </div>\r\n          <div>\r\n            <h3 style={contentStyle}>Página en desarrollo, reportar los errores y tener calma :-)</h3>\r\n          </div>          \r\n        </Carousel>\r\n        <Divider>Sobre los Coins:</Divider>\r\n        <h3>Los coins son la forma de pagar por los servicios, para agregar coins a su cuenta debe recargar, las tarjetas de recargas las puede obtener con el Yanky o iVan, 1cup = 1coin.<br>\r\n        </br> El dinero se recoge porque hace falta para el mantenimiento y mejora de la red. Saludos.</h3> \r\n        <Divider>Ultimos cambios:</Divider>\r\n        <ul>\r\n          <li>Mejoras de funcionalidad.</li>\r\n          <li>Se agrega la opcion pago automático.</li>\r\n          <li>Mejora de diseño.</li>\r\n          <li>Se agrega recuperar contraseña con email.</li>\r\n        </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","class WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatID) {\r\n      const path = `ws://172.20.24.2:8000/ws/chat/${chatID}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log('WebSocket open');\r\n      };     \r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch_messages',\r\n        chatID: chatID\r\n      }));\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect();\r\n      };\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);      \r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === 'messages') {\r\n        this.callbacks[command](parsedData.messages, parsedData.participants);\r\n      }\r\n      if (command === 'message') {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(chatID) {\r\n      this.sendMessage({ command: 'fetch_messages', chatID: chatID });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({ \r\n        command: 'new_message',\r\n        chatID: message.chatID, \r\n        sender: message.sender, \r\n        message: message.content \r\n      }); \r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks['messages'] = messagesCallback;\r\n      this.callbacks['message'] = newMessageCallback;\r\n    }\r\n    \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      }\r\n      catch(err) {\r\n        console.log(err.message);\r\n      }  \r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef.readyState;\r\n    }\r\n  \r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import { Widget, addResponseMessage } from 'react-chat-widget';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport WebSocketInstance from '../websocket';\r\n\r\nimport 'react-chat-widget/lib/styles.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {                   \r\n        }   \r\n        this.waitForSocketConnection(() => {\r\n          WebSocketInstance.addCallbacks(this.setMessages.bind(this), this.addMessage.bind(this))\r\n          WebSocketInstance.fetchMessages(this.props.match.params.chatID);\r\n        })        \r\n    }\r\n\r\n    componentDidMount() {\r\n        WebSocketInstance.connect(this.props.match.params.chatID);\r\n    }\r\n    \r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(\r\n            function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\")\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\")\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n    //agregar el sms a messages en estado\r\n    addMessage = (message) => {\r\n        this.setState({ messages: [...this.state.messages, message]});\r\n        if (message.sender !== this.props.username) {\r\n            addResponseMessage(message.content)  \r\n        }             \r\n    }  \r\n    //mensaje que llegan de atras\r\n    setMessages = (messages, participants) => {        \r\n        this.setState({ messages: messages.reverse()});\r\n        this.state.messages.map((message) => (\r\n            addResponseMessage(message.content)\r\n        ));\r\n        participants.map(this.senderReceiver)\r\n    }\r\n\r\n    senderReceiver = (p) => {\r\n        if (p.user === this.props.username) {\r\n            this.setState({ sender: p.user})\r\n        } else {\r\n            this.setState({ receiver: p.user})\r\n        }\r\n    }\r\n    \r\n    messageChangeHandler = (event) =>  {\r\n        this.setState({\r\n            message: event.target.value\r\n        })\r\n    }\r\n    \r\n    sendMessageHandler = (e) => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            chatID: this.props.match.params.chatID,\r\n            sender: this.props.username,\r\n            content: this.state.message,\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({\r\n            message: ''\r\n        });\r\n    }\r\n    \r\n    renderMessages = (messages) => {\r\n        const currentUser = this.props.username;\r\n        return messages.map((message, i) => (\r\n            <li \r\n                key={message.id} \r\n                style={{textAlign: message.sender === currentUser ? 'right' : 'left'}}>                \r\n                <p>{message.content}\r\n                    <br/>\r\n                    <small style={{'color': message.sender === currentUser ? 'red' : 'blue'}}>\r\n                    {Math.round((new Date().getTime() - new Date(message.timestamp).getTime())/60000)} minutes ago\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    }\r\n\r\n    llegoMessage = (newMessage) => {\r\n        addResponseMessage(newMessage)\r\n    };\r\n\r\n    handleNewUserMessage = (newMessage) => {\r\n        const messageObject = {\r\n            chatID: this.props.match.params.chatID,\r\n            sender: this.props.username,\r\n            content: newMessage,\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({\r\n            message: ''\r\n        });        \r\n    };\r\n\r\n    render() {    \r\n        const messages = this.state.messages;\r\n        return (\r\n            <div id=\"frame\">                \r\n                <div className=\"content\">                   \r\n                    <div className=\"messages\">\r\n                        <ul id=\"chat-log\" style={{listStyle: 'none'}}>\r\n                        { \r\n                            messages && \r\n                            this.renderMessages(messages) \r\n                        }\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"message-input\">\r\n                        <form onSubmit={this.sendMessageHandler}>                            \r\n                            <input\r\n                                onChange={this.messageChangeHandler}\r\n                                value={this.state.message}\r\n                                required\r\n                                id=\"chat-message-input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Write your message...\"\r\n                            />\r\n                            <button id=\"chat-message-submit\" className=\"submit\">\r\n                                Enviar\r\n                            </button>                           \r\n                        </form>\r\n                    </div>\r\n                </div>                     \r\n                <Widget\r\n                    title={this.state.receiver}\r\n                    subtitle={this.state.sender}\r\n                    senderPlaceHolder=\"Escriba un mensaje...\"\r\n                    profileAvatar=\"https://blog-assets.hootsuite.com/wp-content/uploads/2022/03/free-stock-photos-6-620x412.jpg\"\r\n                    titleAvatar=\"https://upload.wikimedia.org/wikipedia/commons/b/bb/NGC_1309_SDSS.jpg\"\r\n                    handleNewUserMessage={this.handleNewUserMessage}\r\n                />                \r\n            </div>          \r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.token,\r\n      username: state.username\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n        ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\nimport { Form, Input, Button, Spin, Typography, Row, Col, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass Login extends React.Component {\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.error) {            \r\n            message.error(this.props.error);\r\n            this.props.stop()           \r\n        }\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        this.props.onAuth(values.username, values.password);\r\n    };\r\n\r\n    render () {        \r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to='/portal/' />\r\n        }\r\n        return (\r\n            <Row>\r\n                <Col span={14} offset={5} style={{maxWidth:'500px', margin: 'auto', textAlign: 'center', background: 'white', padding: '20px', border: 'outset', boxShadow: '0 5px 10px 0' }}>                \r\n                    <Spin tip=\"Cargando...\" spinning={this.props.loading}>\r\n                        <Title level={3}>Bienvenido:</Title>                   \r\n                        <Form                \r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                            initialValues={{remember: true}}  \r\n                            style={{maxWidth: '300px', margin: 'auto'}}\r\n                            onFinish={this.onFinish}            \r\n                            >\r\n                            <Form.Item                \r\n                                name=\"username\"                \r\n                                rules={[{ required: true, message: 'Por favor escriba su nombre de usuario!'}]}>\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Usuario\"/>\r\n                            </Form.Item>\r\n                            <Form.Item                \r\n                                name=\"password\"               \r\n                                rules={[{ required: true, message: 'Por favor escriba su contraseña!'}]}>\r\n                                <Input.Password  prefix={<LockOutlined className=\"site-form-item-icon\"/>} placeholder=\"Contraseña\"/>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{width: '100%'}}>\r\n                                Entrar\r\n                                </Button>                    \r\n                            </Form.Item>                            \r\n                            <Button htmlType=\"submit\" style={{width: '100%'}}>\r\n                                <NavLink to='/portal/register/'>\r\n                                    Crear una cuenta\r\n                                </NavLink>\r\n                            </Button>\r\n                            <Button type=\"danger\" htmlType=\"submit\" style={{width: '100%'}}>\r\n                                <NavLink to='/portal/resetpassword/'>\r\n                                    Olvidé mi contraseña\r\n                                </NavLink>  \r\n                            </Button>                                      \r\n                        </Form>                    \r\n                    </Spin>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.token !== null,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        username: state.username\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)),\r\n        stop: () => dispatch(actions.stopErase())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { Form, Input, Button, Typography, Row, Col, message } from 'antd';\r\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nclass Signup extends React.Component { \r\n  \r\n  componentDidUpdate() {\r\n    if (this.props.error) {            \r\n      message.error(this.props.error);\r\n      this.props.stop()           \r\n    }\r\n  }\r\n\r\n  onFinish = (values) => {\r\n    this.props.onAuth(values.username, values.email, values.password, values.confirm);    \r\n  };\r\n\r\n  render() {   \r\n    if (this.props.isAuthenticated) {\r\n      return <Redirect to='/portal/' />\r\n    }               \r\n    return (\r\n      <Row>\r\n        <Col span={14} offset={5} style={{maxWidth: '600px', margin: 'auto', textAlign: 'center', background: 'white', padding: '20px', border: 'outset', boxShadow: '0 5px 10px 0'}}>          \r\n          <Title level={3}>Datos de registro:</Title>\r\n          <Form\r\n            {...formItemLayout}\r\n            style={{maxWidth: '500px', margin: 'auto'}}          \r\n            name=\"register\"\r\n            onFinish={this.onFinish}      \r\n            scrollToFirstError\r\n          >\r\n            <Form.Item label=\"Nombre de usuario\" name=\"username\"\r\n              rules={[\r\n              {\r\n                  required: true,\r\n                  message: 'Por favor escriba su nombre de usuario',\r\n                  whitespace: true\r\n              },\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Nombre de usuario\"/>\r\n            </Form.Item>              \r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"E-mail\"\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'El correo no es correcto',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor escriba su correo',\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<MailOutlined/>} placeholder=\"Correo electrónico\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              rules={[\r\n                {\r\n                  required: true,                  \r\n                  message: 'Por favor escriba su contraseña',\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\"/>} placeholder=\"Contraseña\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              label=\"Repita la contraseña\"\r\n              dependencies={['password']}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor confirme su contraseña!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n\r\n                    return Promise.reject('Las dos contraseñas no coinciden!');\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\"/>} placeholder=\"Confirme la contraseña\"/>\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>              \r\n              <Button type=\"primary\" htmlType=\"submit\" style={{float: 'right'}}>\r\n                Registrarse\r\n              </Button>\r\n            </Form.Item>\r\n            <Button htmlType=\"submit\" style={{width: '100%'}}>\r\n              <NavLink to='/portal/login/'>\r\n                Ya tengo cuenta\r\n              </NavLink>\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.token !== null,\r\n    loading: state.loading,\r\n    error: state.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignUp(username, email, password1, password2)),\r\n    stop: () => dispatch(actions.stopErase())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Form, Input, Button, Typography, Row, Col, message, Spin } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nclass ResetPass extends React.Component { \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        loading: false\r\n    }\r\n    this.onFinish = this.onFinish.bind(this);\r\n  }\r\n\r\n  onFinish = (values) => {\r\n    axios.get(`https://qbared.com/api/users/email/${ values.email }/`)\r\n    .then(response => {\r\n      if (response.status === 200 ) {    \r\n        axios.post(`https://qbared.com/api/users/auth/password/reset/`, {\r\n          email : values.email,\r\n        })\r\n        .then(response => {\r\n          if (response.status === 200 ) {            \r\n            message.success(\"Link enviado, revise su correo\");\r\n            this.props.history.push('/portal/login/')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.setState({loading:false})\r\n        }) \r\n      }\r\n      this.setState({loading:true})\r\n    })  \r\n    .catch(error => {\r\n      if (error.response) {\r\n        if (error.response.status === 404 ) {\r\n          message.error(\"Email no encontrado\");\r\n          this.setState({loading:false})\r\n        } else {\r\n          console.log(error.response);\r\n          this.setState({loading:false})\r\n        }\r\n      } else {\r\n        console.log(error);\r\n        this.setState({loading:false})\r\n      }\r\n    }) \r\n    this.setState({loading:true})\r\n  };\r\n\r\n  render() {                  \r\n    return (\r\n      <Spin tip=\"Cargando...\" spinning={this.state.loading}>\r\n        <Row>\r\n          <Col span={14} offset={5} style={{ maxWidth: '500px', margin: 'auto', textAlign: 'center', background: 'white', padding: '20px', border: 'outset', boxShadow: '0 5px 10px 0'}}>          \r\n            <Title level={3}>Escriba su Email:</Title>\r\n            <Form\r\n              {...formItemLayout}\r\n              style={{maxWidth: '400px', margin: 'auto'}}          \r\n              name=\"register\"\r\n              onFinish={this.onFinish}      \r\n              scrollToFirstError\r\n            >                         \r\n              <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                  {\r\n                    type: 'email',\r\n                    message: 'El correo no es correcto',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor escriba su correo',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input prefix={<MailOutlined/>} placeholder=\"Correo electrónico\"/>\r\n              </Form.Item>            \r\n              <Form.Item {...tailFormItemLayout}>              \r\n                <Button type=\"primary\" htmlType=\"submit\" style={{float: 'right'}}>\r\n                  Enviar\r\n                </Button>\r\n              </Form.Item>\r\n              <Button type=\"danger\" htmlType=\"submit\" style={{float: 'right'}}>\r\n                <NavLink to='/portal/login/'>\r\n                  Cancelar\r\n                </NavLink>\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default ResetPass;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button, Typography, Row, Col, message, Spin } from 'antd';\r\nimport { LockOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nclass Newpass extends React.Component { \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        loading: false\r\n    }\r\n    this.onFinish = this.onFinish.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.error) {            \r\n      message.error(this.props.error);\r\n      this.props.stop()           \r\n    }\r\n  }\r\n\r\n  onFinish = (values) => {\r\n    const uid = this.props.match.params.uid;\r\n    const token = this.props.match.params.token;\r\n    axios.post(`https://qbared.com/api/users/auth/password/reset/confirm/`, {      \r\n      uid: uid,\r\n      token: token,\r\n      new_password1: values.password,\r\n      new_password2: values.confirm\r\n\r\n    })\r\n    .then(response => {\r\n      if (response.status === 200 ) {\r\n        message.success(\"Contraseña guardada con éxito\");\r\n        this.props.history.push('/portal/login/')\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response) {\r\n        if (error.response.status === 400) {\r\n          var i;\r\n          for (i in error.response.data) {                    \r\n            message.error(error.response.data[i][0])\r\n          }        \r\n        } else if (error.response.status === 500) {\r\n          message.error(\"Error del servidor vuela a intentarlo\")\r\n          this.setState({loading:false})\r\n        } else {\r\n          console.log(error.response)\r\n          this.setState({loading:false})\r\n        }        \r\n      } else {\r\n        console.log(error)\r\n      } this.setState({loading:false})\r\n    })\r\n    this.setState({loading:true})\r\n  };\r\n\r\n  render() {       \r\n    return (\r\n      <Spin tip=\"Cargando...\" spinning={this.state.loading}>\r\n        <Row>\r\n          <Col span={14} offset={5} style={{maxWidth: '500px', margin: 'auto', textAlign: 'center', background: 'white', padding: '20px', border: 'outset', boxShadow: '0 5px 10px 0'}}>          \r\n            <Title level={3}>Nueva contraseña:</Title>\r\n            <Form\r\n              {...formItemLayout}\r\n              style={{maxWidth: '400px', margin: 'auto'}}          \r\n              name=\"newpass\"\r\n              onFinish={this.onFinish}      \r\n              scrollToFirstError\r\n            >\r\n              <Form.Item\r\n                name=\"password\"\r\n                label=\"Contraseña\"\r\n                rules={[\r\n                  {\r\n                    required: true,                  \r\n                    message: 'Por favor escriba su contraseña',\r\n                  },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\"/>} placeholder=\"Contraseña\"/>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Repita la contraseña\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor confirme su contraseña!',\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue('password') === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n\r\n                      return Promise.reject('Las dos contraseñas no coinciden!');\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\"/>} placeholder=\"Confirme la contraseña\"/>\r\n              </Form.Item>\r\n              <Form.Item {...tailFormItemLayout}>              \r\n                <Button type=\"primary\" htmlType=\"submit\" style={{float: 'right'}}>\r\n                  Guardar\r\n                </Button>\r\n              </Form.Item>            \r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Newpass;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport { QuestionCircleOutlined  } from '@ant-design/icons';\r\nimport { Card, Divider, message, Spin, Form, Input, Tooltip, Row, Col, Button, Typography } from 'antd';\r\n\r\nconst { Title } = Typography\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nclass DatosPerfil extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            loading: true\r\n        }\r\n        this.getUser = this.getUser.bind(this);\r\n        this.onFinish = this.onFinish.bind(this);      \r\n    }\r\n\r\n    getUser = () => {\r\n        axiosInstance\r\n        .get(`users/details/${ this.props.username}/`) \r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                this.setState({\r\n                    user: response.data,\r\n                    loading: false\r\n                })                \r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUser()\r\n    }\r\n\r\n    onFinish = (values) => {        \r\n        axiosInstance\r\n        .put(`users/details/${ this.props.username }/`, {\r\n            email: values.email,\r\n            first_name: values.nombre,\r\n            last_name: values.apellidos\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                message.success(\"Perfil editado correctamente.\");\r\n                this.getUser();                \r\n            }\r\n        })        \r\n        .catch((error) => {\r\n            if (error.response) {\r\n                if (error.response.status === 500) {\r\n                    message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                    this.setState({loading:false});                       \r\n                } else {\r\n                    console.log(error.response);\r\n                    this.setState({loading:false});\r\n                }\r\n            } else {\r\n                console.log(error);\r\n                this.setState({loading:false});\r\n            }                               \r\n        })\r\n        this.setState({loading:true}); \r\n    };\r\n    \r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return (            \r\n                <Spin tip=\"Cargando...\" spinning={this.state.loading}>\r\n                    <Row style={{ background: 'white', padding: '15px', border: 'outset', boxShadow: '0 5px 10px 0' }}>           \r\n                        <Col span={12}>\r\n                            <Card title=\"Perfil\">                    \r\n                                    <Card.Grid style={{fontSize: 15, width: '100%', float: 'left'}}>Usuario:<Divider type=\"vertical\"/><span style={{fontSize: 25, }}>{this.state.user.username}</span></Card.Grid> \r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>Fecha de registro: {`${new Date(this.state.user.date_joined)}`}</Card.Grid>\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>Ultima visita: {`${new Date(this.state.user.last_login)}`}</Card.Grid>\r\n                            </Card>\r\n                        </Col> \r\n                        <Col span={12}>\r\n                            <Title level={4} style={{ textAlign: 'center' }}>Editar mis datos:</Title>\r\n                            <Form {...layout} onFinish={this.onFinish}                        \r\n                            scrollToFirstError\r\n                            >\r\n                            <Form.Item name=\"nombre\" label={\r\n                                <span>\r\n                                    Nombre&nbsp;\r\n                                    <Tooltip title=\"Su nombre real?\">\r\n                                    <QuestionCircleOutlined />\r\n                                    </Tooltip>\r\n                                </span>\r\n                                }\r\n                                rules={[{ required: true, message: 'Por favor escriba su nombre!', whitespace: true,},]}\r\n                            >\r\n                                <Input placeholder={this.state.user.first_name} />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"apellidos\" label={\r\n                                <span>\r\n                                    Apellidos&nbsp;\r\n                                    <Tooltip title=\"Sus apellidos?\">\r\n                                    <QuestionCircleOutlined />\r\n                                    </Tooltip>\r\n                                </span>\r\n                                }\r\n                                rules={[{ required: true, message: 'Por favor escriba su apellido!', whitespace: true,},]}\r\n                            >\r\n                                <Input placeholder={this.state.user.last_name} />\r\n                            </Form.Item>\r\n                            \r\n                            <Form.Item name=\"email\" label=\"Correo: \" rules={[{ type: 'email', message: 'Esto no es un correo valido!',},{ required: true, message: 'Por favor escrbiba un correo.',},]}>\r\n                                <Input placeholder={this.state.user.email}/>\r\n                            </Form.Item>\r\n\r\n                        {/*  <Form.Item\r\n                                name=\"movil\"\r\n                                label=\"Movil:\"\r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor escriba su movil!',\r\n                                },\r\n                                ]}\r\n                            >\r\n                                <Input\r\n                                addonBefore=\"+53\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }} placeholder={this.state.user.user_name}\r\n                                />\r\n                            </Form.Item> */}\r\n\r\n                            <Form.Item style={{textAlign: 'right'}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                Guardar\r\n                                </Button>\r\n                            </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>                              \r\n                </Spin>            \r\n            )\r\n        } else {\r\n            return <Redirect to='/portal/login/' />\r\n        }\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n        username: state.username,\r\n        isAuthenticated: state.token !== null,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DatosPerfil);\r\n\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Badge, Button, Statistic, Form, message, Select, InputNumber, Input, Row, Col, Divider, PageHeader, Descriptions, Spin, Switch, Modal, Typography } from 'antd';\r\nimport { PayCircleOutlined, CloseOutlined, CheckOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport * as actions from '../../store/actions/auth';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\nconst { Countdown } = Statistic;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nclass Internet extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            loading: false\r\n        }      \r\n        this.handleSwitch = this.handleSwitch.bind(this);       \r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.timeOver = this.timeOver.bind(this);\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        if ( this.props.services.internet) {\r\n            message.info('Ya tiene activo el servicio')            \r\n        } else {\r\n            if ( values.tipo === \"internetHoras\") {\r\n                if (values.horas <= 1) {\r\n                    message.error(\"Escriba las horas correctamente, mínimo 2 horas.\")                    \r\n                } else {\r\n                    const costoHoras = values.horas * 10\r\n                    if ( costoHoras <= this.props.profile.coins ) {\r\n                        confirm({\r\n                            title: '¿Seguro que desea pagar el Internet x Horas?',\r\n                            icon: <ExclamationCircleOutlined />,\r\n                            content: `Son ${costoHoras} coins por ${values.horas} horas.`,\r\n                            onOk: () => {                \r\n                                axiosInstance\r\n                                .put(`servicios/internet/${ this.props.username }/`, {                                                              \r\n                                    int_horas: values.horas,\r\n                                    cantidad: costoHoras,\r\n                                    contra: values.contra,                                  \r\n                                })\r\n                                .then((response) => {\r\n                                    if (response.status === 200) {                                                         \r\n                                        message.success(\"Pago realizado con éxito.\"); \r\n                                        this.props.getServices(this.props.username);\r\n                                        this.props.getProfile(this.props.username);\r\n                                        this.setState({loading: false})\r\n                                    }\r\n                                })                                \r\n                                .catch((error) => {\r\n                                    if (error.response) {                                        \r\n                                        if (error.response.status === 400) {\r\n                                            message.error(\"Ocurrio un error, actualice y vuelva a intentarlo.\");\r\n                                            this.setState({loading: false});                                        \r\n                                        } else if (error.response.status === 500) {\r\n                                            message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                                            this.setState({loading: false});                       \r\n                                        } else {\r\n                                            console.log(error.response);\r\n                                            this.setState({loading: false});\r\n                                        }\r\n                                    } else {\r\n                                        console.log(error);\r\n                                        this.setState({loading: false});\r\n                                    }                               \r\n                                });\r\n                                this.setState({loading: true})                                \r\n                            }\r\n                        });                        \r\n                    } else {\r\n                        message.error('No tiene suficientes coins, por favor recargue')\r\n                    }\r\n                }\r\n            } else if ( values.tipo === \"internetMensual\") {\r\n                if ( this.props.profile.coins >= 200) {                                                 \r\n                    confirm({\r\n                        title: '¿Seguro que desea pagar por Internet Mensual?',\r\n                        icon: <ExclamationCircleOutlined />,\r\n                        content: 'Son 200 coins por 30 días.',\r\n                        onOk: () => {\r\n                            axiosInstance\r\n                            .put(`servicios/internet/${ this.props.username }/`, {\r\n                                contra: values.contra,\r\n                                perfil: 'LOCAL_1m',\r\n                                servicio: \"internetMensual\",      \r\n                            })\r\n                            .then((response) => {\r\n                                if (response.status === 200) {\r\n                                    message.success(\"Pago realizado con éxito.\"); \r\n                                    this.props.getServices(this.props.username);\r\n                                    this.props.getProfile(this.props.username);\r\n                                    this.setState({loading: false});                                                                         \r\n                                }\r\n                            })                            \r\n                            .catch((error) => {\r\n                                if (error.response) {\r\n                                    if (error.response.status === 500) {\r\n                                        message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                                        this.setState({loading: false});\r\n                                    } else if (error.response.status === 400) {\r\n                                        message.error(\"Ocurrio un error, actualice y vuelva a intentarlo.\");\r\n                                        this.setState({loading: false});                    \r\n                                    } else {\r\n                                        console.log(error.response);\r\n                                        this.setState({loading: false});\r\n                                    }\r\n                                } else {\r\n                                    console.log(error);\r\n                                    this.setState({loading: false});\r\n                                }                               \r\n                            });\r\n                            this.setState({loading: true});\r\n                        }\r\n                    });                                                                               \r\n                } else {\r\n                    message.error('No tiene suficientes coins, por favor recargue')\r\n                }\r\n            } else {\r\n                if ( this.props.profile.coins >= 300) {                    \r\n                    confirm({\r\n                        title: '¿Seguro que desea pagar por Internet Semanal?',\r\n                        icon: <ExclamationCircleOutlined />,\r\n                        content: 'Son 300 coins por 7 días de internet puesto desde 11am hasta 3am.',\r\n                        onOk: () => {                              \r\n                            axiosInstance\r\n                            .put(`servicios/internet/${ this.props.username }/`, {                                \r\n                                contra: values.contra,\r\n                                perfil: '1mb_para_PC2',\r\n                                servicio: \"internetSemanal\",     \r\n                            })\r\n                            .then((response) =>{\r\n                                if (response.status === 200) {\r\n                                    message.success(\"Pago realizado con éxito.\"); \r\n                                    this.props.getServices(this.props.username);\r\n                                    this.props.getProfile(this.props.username);\r\n                                    this.setState({loading: false});                          \r\n                                }\r\n                            })                            \r\n                            .catch((error) => {\r\n                                if (error.response) {\r\n                                    if (error.response.status === 500) {\r\n                                        message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                                        this.setState({loading: false});\r\n                                    } else if (error.response.status === 400) {\r\n                                        message.error(\"Ocurrio un error, actualice y vuelva a intentarlo.\");\r\n                                        this.setState({loading: false});                    \r\n                                    } else {\r\n                                        console.log(error.response);\r\n                                        this.setState({loading: false});\r\n                                    }\r\n                                } else {\r\n                                    console.log(error);\r\n                                    this.setState({loading: false});\r\n                                }                               \r\n                            });\r\n                            this.setState({loading: true});\r\n                        }\r\n                    });                                              \r\n                } else {\r\n                    message.error('No tiene suficientes coins, por favor recargue')\r\n                } \r\n            }           \r\n        }\r\n    }\r\n\r\n    timeOver = () => {\r\n        axiosInstance\r\n        .put(`servicios/internet/${ this.props.username }/`, {\r\n            internet: false                                 \r\n        })\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                this.props.getServices(this.props.username);\r\n                this.props.getProfile(this.props.username);\r\n                this.setState({ loading:false }); \r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response) {\r\n                if (error.response.status === 500) {\r\n                    message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                    this.setState({loading: false});\r\n                } else if (error.response.status === 400) {\r\n                    message.error(\"Ocurrio un error, actualice y vuelva a intentarlo.\");\r\n                    this.setState({loading: false});                    \r\n                } else {\r\n                    console.log(error.response);\r\n                    this.setState({loading: false});\r\n                }\r\n            } else {\r\n                console.log(error);\r\n                this.setState({loading: false});\r\n            }                               \r\n        });\r\n        this.setState({ loading:true }); \r\n    }\r\n\r\n    handleSwitch = (value) => {\r\n        confirm({\r\n            title: '¿Seguro que desea cambiar esta opción?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Si esta activada cuando finalice el tiempo se reanudará automáticamente si tiene suficientes coins en la cartera.',\r\n            onOk: () => {\r\n                axiosInstance\r\n                .put(`servicios/internet/${ this.props.username }/`, {\r\n                    int_auto: value\r\n                })\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        message.success(\"Compra automática cambiada\");\r\n                        this.props.getServices(this.props.username);\r\n                        this.setState({loading: false});               \r\n                    }\r\n                })        \r\n                .catch((error) => {\r\n                    if (error.response) {\r\n                        if (error.response.status === 500) {\r\n                            message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                            this.setState({loading: false});\r\n                        } else if (error.response.status === 400) {\r\n                            message.error(\"Ocurrio un error, actualice y vuelva a intentarlo.\");\r\n                            this.setState({loading: false});                    \r\n                        } else {\r\n                            console.log(error.response);\r\n                            this.setState({loading: false});\r\n                        }\r\n                    } else {\r\n                        console.log(error);\r\n                        this.setState({loading: false});\r\n                    }                               \r\n                });\r\n                this.setState({loading: true});\r\n            }\r\n        })    \r\n    }\r\n\r\n    fechaActual = new Date();\r\n    fechaMes = this.fechaActual.setDate(this.fechaActual.getDate() + 30);  \r\n    fechaMes = new Date(this.fechaMes)\r\n\r\n    render () {\r\n        if (this.props.isAuthenticated) {  \r\n            return (\r\n                <Spin tip=\"Cargando...\" spinning={this.state.loading}>\r\n                    <Row style={{ background: 'white', border: 'outset', boxShadow: '0 5px 10px 0' }}>\r\n                        <Col span={12}>\r\n                            <Card title=\"Internet\">\r\n                                <Card.Grid style={{ width: '100%', textAlign: 'center'}}>                                             \r\n                                    <Text>Acceso a Internet, con las coins que gastes se compran horas nautas para poder estar ONLINE!!!</Text>\r\n                                    <ul>\r\n                                        <li>El semanal es con internet puesto desde 11am a 3am todos los días.</li>\r\n                                        <li>El mensual es el portal nauta para poner su cuenta, no incluye internet.</li>\r\n                                        <li>Por horas puede comprar las que quiera, mínimo dos y usarlas en el horario de 11am a 3am cuando desee.</li>\r\n                                    </ul>                       \r\n                                </Card.Grid>                                          \r\n                                {\r\n                                    this.props.services.internet ?\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>                           \r\n                                        <Badge color=\"green\" text=\"Activo\" />\r\n                                        {\r\n                                            this.props.services.int_time ?\r\n                                            <Countdown title=\"Tiempo restante\" onFinish={this.timeOver} value={this.props.services.int_time} format=\"d:DD-HH:mm:ss\" />\r\n                                            :\r\n                                            <p>El tiempo lo puede ver <a href=\"https://login.qbared.com/status\">Aqui</a></p>\r\n                                        }                            \r\n                                    </Card.Grid>\r\n                                    :\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                        <Badge color=\"red\" text=\"No Activo\" />\r\n                                    </Card.Grid> \r\n                                }                        \r\n                            </Card> \r\n                        </Col>\r\n                            <Col span={12} style={{ padding: '15px' }}>\r\n                            <Form {...layout} onFinish={this.onFinish}>\r\n                                <PageHeader title=\"Detalles:\" extra={                                                    \r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\">Pagar</Button>\r\n                                    </Form.Item>\r\n                                    }>\r\n                                    <Descriptions>\r\n                                        <Descriptions.Item style={{width: '100%' }}>\r\n                                            <Switch checkedChildren={<CheckOutlined />} unCheckedChildren={<CloseOutlined />} checked={ this.props.services.int_auto } onChange={ this.handleSwitch }/>\r\n                                        </Descriptions.Item>\r\n                                    </Descriptions>\r\n                                    <Descriptions>\r\n                                        <Descriptions.Item style={{width: '100%' }}>    \r\n                                            <Title style={{width: '30%'}} level={5}>Pago automático</Title>\r\n                                            <Text style={{width: '70%'}}>*Tip: Active esta opción y cuando acabe su tiempo se le pagará automáticamente si tiene suficientes coins en la cartera.</Text>                     \r\n                                        </Descriptions.Item>\r\n                                    </Descriptions>                                \r\n                                </PageHeader>                        \r\n                                <Form.Item\r\n                                        style={{ textAlign: 'right' }}\r\n                                        shouldUpdate={(prevValues, currentValues) => prevValues.tipo !== currentValues.tipo}\r\n                                    >               \r\n                                    {({ getFieldValue }) => {\r\n                                        return getFieldValue('tipo') !== \"internetHoras\" ?                            \r\n                                        <Statistic prefix={<PayCircleOutlined />} title=\"Precio:\" value={getFieldValue('tipo') === \"internetMensual\" ? 200 : 300} />                            \r\n                                        :\r\n                                        <Form.Item\r\n                                        style={{ textAlign: 'right' }}\r\n                                        shouldUpdate={(prevValues, currentValues) => prevValues.horas !== currentValues.horas}\r\n                                        > \r\n                                            {({ getFieldValue }) => {\r\n                                                return (getFieldValue('horas') ?                                                \r\n                                                <Statistic prefix={<PayCircleOutlined />} title=\"Precio:\" value={(getFieldValue('horas') * 10)} />\r\n                                                :\r\n                                                <p>Cuantas horas?</p> \r\n                                            )}}\r\n                                        </Form.Item>                               \r\n                                    }} \r\n                                </Form.Item>\r\n                                <Divider></Divider>\r\n                                <Form.Item name=\"tipo\" label=\"Tipo de conexion\" rules={[{ required: true, message: \"Escoja un tipo de internet.\" }]}>\r\n                                    <Select\r\n                                        placeholder=\"Mensual, semanal o por hora?\" \r\n                                    >\r\n                                        <Option value=\"internetMensual\">Mensual</Option>\r\n                                        <Option value=\"internetSemanal\">Semanal</Option>\r\n                                        <Option value=\"internetHoras\" name=\"horas\">Por hora</Option>                                \r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    noStyle\r\n                                    shouldUpdate={(prevValues, currentValues) => prevValues.tipo !== currentValues.tipo}\r\n                                    >\r\n                                    {({ getFieldValue }) => {\r\n                                        return getFieldValue('tipo') === 'internetHoras' ? (\r\n                                            <Form.Item label=\"Horas:\" name=\"horas\" rules={[{ required: true, message: \"Defina cuantas horas.\" }]}>\r\n                                                <InputNumber/>\r\n                                            </Form.Item>          \r\n                                        ) : null;\r\n                                    }}                         \r\n                                </Form.Item>                            \r\n                                <Form.Item name=\"contra\" label=\"Contraseña\" rules={[{ required: true, message: \"Escriba una contraseña.\" }]}>\r\n                                    <Input.Password placeholder=\"Escriba su contraseña\" />\r\n                                </Form.Item>\r\n                                </Form>\r\n                            </Col>                                                                  \r\n                    </Row> \r\n                </Spin>                       \r\n            )\r\n        } else {\r\n            return <Redirect to='/portal/login/' />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n        username: state.username,\r\n        isAuthenticated: state.token !== null,\r\n        loading: state.loading,\r\n        profile: state.profile,\r\n        user: state.user,\r\n        services: state.services\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProfile: (username) => dispatch(actions.getProfile(username)),\r\n        getServices: (username) => dispatch(actions.getServices(username))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Internet);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Badge, Button, Statistic, Form, message, Row, Col, PageHeader, Descriptions, Spin, Switch, Modal, Typography } from 'antd';\r\nimport { PayCircleOutlined, CloseOutlined, CheckOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport * as actions from '../../store/actions/auth';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Countdown } = Statistic;\r\nconst { confirm } = Modal;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nclass JovenClub extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n        this.handleSwitch = this.handleSwitch.bind(this);        \r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.timeOver = this.timeOver.bind(this);\r\n    }\r\n\r\n    onFinish = () => {        \r\n        if ( this.props.services.jc) {\r\n            message.info('Ya tiene activo el servicio');            \r\n        } else {\r\n            if ( this.props.profile.coins >= 100) {\r\n                confirm({\r\n                    title: '¿Seguro que desea pagar por Joven Club?',\r\n                    icon: <ExclamationCircleOutlined />,\r\n                    content: 'Son 100 coins por 30 días.',\r\n                    onOk: () => { \r\n                        axiosInstance\r\n                        .put(`servicios/jovenclub/${ this.props.username }/`, {\r\n                            coins: 100,                                                 \r\n                        })\r\n                        .then((response) => {\r\n                            if (response.status === 200) {\r\n                                message.success(\"Pago realizado con éxito.\");\r\n                                this.props.getServices(this.props.username); \r\n                                this.props.getProfile(this.props.username); \r\n                                this.setState({ loading:false });                     \r\n                            }\r\n                        })                        \r\n                        .catch((error) => {\r\n                            if (error.response) {\r\n                                if (error.response.status === 500) {\r\n                                    message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                                    this.setState({ loading:false });                       \r\n                                } if (error.response.status === 400) {\r\n                                    message.error(\"Ocurrio un error, actualice y vuelva a intentarlo.\");\r\n                                    this.setState({loading: false});\r\n                                } else {\r\n                                    console.log(error.response);\r\n                                    this.setState({ loading:false }); \r\n                                }\r\n                            } else {\r\n                                console.log(error);\r\n                                this.setState({ loading:false });  \r\n                            }                               \r\n                        });\r\n                        this.setState({loading:true});\r\n                    }\r\n                });                \r\n            } else {\r\n                message.error('No tiene suficientes coins, por favor recargue');                \r\n            }\r\n        }        \r\n    }\r\n\r\n    timeOver = () => {\r\n        axiosInstance\r\n        .put(`servicios/jovenclub/${ this.props.username }/`, {\r\n            jc: false                                 \r\n        })\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                this.props.getServices(this.props.username);\r\n                this.props.getProfile(this.props.username);\r\n                this.setState({ loading:false }); \r\n            }\r\n        })\r\n        this.setState({ loading:true }); \r\n    }\r\n\r\n    handleSwitch = (value) => {\r\n        confirm({\r\n            title: '¿Seguro que desea cambiar esta opción?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Si esta activada cuando finalice el tiempo se le añadiran 30 días si tiene suficientes coins en la cartera.',\r\n            onOk: () => {\r\n                axiosInstance\r\n                .put(`servicios/jovenclub/${ this.props.username }/`, {\r\n                    jc_auto: value\r\n                })\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        message.success(\"Compra automática cambiada\");\r\n                        this.props.getServices(this.props.username);\r\n                        this.setState({loading: false});               \r\n                    }\r\n                })        \r\n                .catch((error) => {\r\n                    if (error.response) {\r\n                        if (error.response.status === 500) {\r\n                            message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                            this.setState({loading: false});                       \r\n                        } else {\r\n                            console.log(error.response);\r\n                            this.setState({loading: false});\r\n                        }\r\n                    } else {\r\n                        console.log(error);\r\n                        this.setState({loading: false});\r\n                    }                               \r\n                });\r\n                this.setState({loading: true});\r\n            }\r\n        })    \r\n    }\r\n\r\n    fechaActual = new Date();\r\n    fechaMes = this.fechaActual.setDate(this.fechaActual.getDate() + 30);  \r\n    fechaMes = new Date(this.fechaMes)\r\n\r\n    render () {\r\n        if (this.props.isAuthenticated) {\r\n            return (            \r\n                <Spin tip=\"Cargando...\" spinning={this.state.loading}>\r\n                    <Row style={{ background: 'white', border: 'outset', boxShadow: '0 5px 10px 0' }}>\r\n                        <Col span={12}>                               \r\n                            <Card title=\"Joven Club\">\r\n                                <Card.Grid style={{ width: '100%', textAlign: 'center'}}>Acceso a la red Joven Club. Se recogen coins para el mantenimiento de la infraestructura de la red.</Card.Grid>  \r\n                                {\r\n                                    this.props.services.jc ?\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                        <Badge color=\"green\" text=\"Activo\" />\r\n                                        <Countdown title=\"Tiempo restante\" onFinish={this.timeOver} value={this.props.services.jc_time} format=\"d:D-HH:mm:ss\" />\r\n                                    </Card.Grid>\r\n                                    :\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                        <Badge color=\"red\" text=\"No Activo\" />\r\n                                    </Card.Grid> \r\n                                }                   \r\n                            </Card>               \r\n                        </Col>                \r\n                        <Col span={12}>\r\n                            <PageHeader title=\"Detalles:\" extra={\r\n                                <Form {...layout} onFinish={this.onFinish}>                                \r\n                                    <Form.Item style={{textAlign: 'right'}}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">Pagar</Button>\r\n                                    </Form.Item> \r\n                                </Form>}>\r\n                                <Descriptions>\r\n                                    <Descriptions.Item style={{width: '100%' }}>\r\n                                        <Switch checkedChildren={<CheckOutlined />} unCheckedChildren={<CloseOutlined />} checked={ this.props.services.jc_auto } onChange={ this.handleSwitch }/>\r\n                                    </Descriptions.Item>\r\n                                </Descriptions>\r\n                                <Descriptions>\r\n                                    <Descriptions.Item style={{width: '100%' }}>    \r\n                                        <Title style={{width: '30%'}} level={5}>Pago automático</Title>\r\n                                        <Text style={{width: '70%'}}>*Tip: Active esta opción y cuando acabe su tiempo se le pagará automáticamente si tiene suficientes coins en la cartera.</Text>                     \r\n                                    </Descriptions.Item>\r\n                                </Descriptions>\r\n                                <Descriptions>  \r\n                                    <Descriptions.Item style={{width: '100%' }}>Si es primera vez que va a usar JovenClub escribirle al Yanky.</Descriptions.Item>\r\n                                </Descriptions>                         \r\n                                <Descriptions>                                \r\n                                    <Descriptions.Item label=\"Desde\" style={{width: '50%' }}>{new Date().toLocaleString()}</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"Hasta\" style={{width: '50%' }}>{this.fechaMes.toLocaleString()}</Descriptions.Item>                             \r\n                                </Descriptions>                             \r\n                                <Statistic style={{textAlign: 'right'}} prefix={<PayCircleOutlined />} title=\"Precio:\" value=\"100\" />                                       \r\n                            </PageHeader>\r\n                        </Col>\r\n                    </Row>                \r\n                </Spin>  \r\n            )\r\n        } else {\r\n            return <Redirect to='/portal/login/' />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n        username: state.username,\r\n        isAuthenticated: state.token !== null,\r\n        profile: state.profile,\r\n        services: state.services\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProfile: (username) => dispatch(actions.getProfile(username)),\r\n        getServices: (username) => dispatch(actions.getServices(username))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JovenClub);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Badge, Button, Statistic, Form, message, Row, Col, PageHeader, Descriptions, Spin, Switch, Modal, Typography } from 'antd';\r\nimport { PayCircleOutlined, CloseOutlined, CheckOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport * as actions from '../../store/actions/auth';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Countdown } = Statistic;\r\nconst { confirm } = Modal;\r\n\r\n\r\nclass Emby extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n        this.handleSwitch = this.handleSwitch.bind(this);       \r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.timeOver = this.timeOver.bind(this);\r\n    }\r\n\r\n    onFinish = () => {        \r\n        if ( this.props.services.emby) {\r\n            message.info('Ya tiene activo el servicio');            \r\n        } else {\r\n            if ( this.props.profile.coins >= 100) {                \r\n                confirm({\r\n                    title: '¿Seguro que desea pagar por Emby?',\r\n                    icon: <ExclamationCircleOutlined />,\r\n                    content: 'Son 100 coins por 30 días.',\r\n                    onOk: () => {\r\n                        axiosInstance\r\n                        .put(`servicios/emby/${ this.props.username }/`, {\r\n                            coins: 100,                                     \r\n                        })\r\n                        .then((response) => {\r\n                            if (response.status === 200) {\r\n                                message.success(\"Pago realizado con éxito\");\r\n                                this.props.getServices(this.props.username);\r\n                                this.props.getProfile(this.props.username);\r\n                                this.setState({loading: false});\r\n                            }\r\n                        })                        \r\n                        .catch((error) => {\r\n                            if (error.response) {\r\n                                if (error.response.status === 500) {\r\n                                    message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                                    this.setState({loading: false});                    \r\n                                } else if (error.response.status === 400) {\r\n                                    message.error(\"Ocurrio un error, actualice y vuelva a intentarlo.\");\r\n                                    this.setState({loading: false});\r\n                                } else {\r\n                                    console.log(error.response);\r\n                                    this.setState({loading: false});\r\n                                }\r\n                            } else {\r\n                                console.log(error);\r\n                                this.setState({loading: false});\r\n                            }                               \r\n                        })\r\n                        this.setState({loading: true});\r\n                    }\r\n                });                \r\n            } else {\r\n                message.error('No tiene suficientes coins, por favor recargue')                \r\n            }\r\n        }     \r\n    }\r\n\r\n    timeOver = () => {\r\n        axiosInstance\r\n        .put(`servicios/emby/${ this.props.username }/`, {\r\n            emby: false                                 \r\n        })\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                this.props.getServices(this.props.username);\r\n                this.props.getProfile(this.props.username);\r\n                this.setState({ loading:false }); \r\n            }\r\n        })\r\n        this.setState({ loading:true }); \r\n    }\r\n\r\n    handleSwitch = (value) => {\r\n        confirm({\r\n            title: '¿Seguro que desea cambiar esta opción?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Si esta activada cuando finalice el tiempo se añadirán 30 días si tiene suficientes coins en la cartera.',\r\n            onOk: () => {\r\n                axiosInstance\r\n                .put(`servicios/emby/${ this.props.username }/`, {\r\n                    emby_auto: value\r\n                })\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        message.success(\"Compra automática cambiada\");\r\n                        this.props.getServices(this.props.username); \r\n                        this.setState({ loading: false});               \r\n                    }\r\n                })        \r\n                .catch((error) => {\r\n                    if (error.response) {\r\n                        if (error.response.status === 500) {\r\n                            message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                            this.setState({ loading: false});                        \r\n                        } else {\r\n                            console.log(error.response);\r\n                            this.setState({ loading: false});\r\n                        }\r\n                    } else {\r\n                        console.log(error);\r\n                        this.setState({ loading: false});\r\n                    }                               \r\n                });\r\n                this.setState({ loading: true});\r\n            }\r\n        })    \r\n    }\r\n\r\n    fechaActual = new Date();\r\n    fechaMes = this.fechaActual.setDate(this.fechaActual.getDate() + 30);  \r\n    fechaMes = new Date(this.fechaMes)\r\n\r\n    render () {\r\n        if (this.props.isAuthenticated) {           \r\n            return (            \r\n                <Spin tip=\"Cargando...\" spinning={this.state.loading}>\r\n                    <Row style={{ background: 'white', border: 'outset', boxShadow: '0 5px 10px 0' }}>\r\n                        <Col span={12}>            \r\n                            <Card title=\"Emby\">\r\n                                <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                    Streaming multimedia, peliculas, series, animados, paquete semanal, entre otros. Puedes verlo desde tu PC, teléfono, smartTV, etc.<br></br><a href=\"https://qbared.com/emby/\">Más información, click aquí!!!</a>\r\n                                </Card.Grid>                 \r\n                                {\r\n                                    this.props.services.emby ?\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                        <Badge color=\"green\" text=\"Activo\" />\r\n                                        <Countdown title=\"Tiempo restante\" onFinish={this.timeOver} value={this.props.services.emby_time} format=\"d:D-HH:mm:ss\" />\r\n                                    </Card.Grid>\r\n                                    :\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                        <Badge color=\"red\" text=\"No Activo\" />\r\n                                    </Card.Grid> \r\n                                }\r\n                            </Card> \r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <PageHeader title=\"Detalles:\" extra={\r\n                                <Form onFinish={this.onFinish}>                        \r\n                                <Form.Item >\r\n                                    <Button type=\"primary\" htmlType=\"submit\">Pagar</Button>\r\n                                </Form.Item>\r\n                                </Form>}>\r\n                                <Descriptions>\r\n                                    <Descriptions.Item style={{width: '100%' }}>\r\n                                        <Switch checkedChildren={<CheckOutlined />} unCheckedChildren={<CloseOutlined />} checked={ this.props.services.emby_auto } onChange={ this.handleSwitch }/>\r\n                                    </Descriptions.Item>\r\n                                </Descriptions>\r\n                                <Descriptions>\r\n                                    <Descriptions.Item style={{width: '100%' }}>    \r\n                                        <Title style={{width: '30%'}} level={5}>Pago automático</Title>\r\n                                        <Text style={{width: '70%'}}>*Tip: Active esta opción y cuando acabe su tiempo se le pagará automáticamente si tiene suficientes coins en la cartera.</Text>                     \r\n                                    </Descriptions.Item>\r\n                                </Descriptions>                            \r\n                                <Descriptions>  \r\n                                <Descriptions.Item style={{width: '100%' }}>Entre la primera vez solo con su usuario, luego en ajustes del emby le agrega una contraseña para mas seguridad de su cuenta.</Descriptions.Item>\r\n                                </Descriptions>\r\n                                <Descriptions>\r\n                                    <Descriptions.Item label=\"  Desde\" style={{width: '50%' }}>{new Date().toLocaleString()}</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"  Hasta\" style={{width: '50%' }}>{this.fechaMes.toLocaleString()}</Descriptions.Item>                                \r\n                                </Descriptions>\r\n                                <Statistic style={{textAlign: 'right'}} prefix={<PayCircleOutlined />} title=\"Precio:\" value=\"100\" />               \r\n                            </PageHeader>\r\n                        </Col>\r\n                    </Row>                 \r\n                </Spin>\r\n            )\r\n        } else {\r\n            return <Redirect to='/portal/login/' />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n        username: state.username,\r\n        isAuthenticated: state.token !== null,\r\n        profile: state.profile,\r\n        services: state.services\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProfile: (username) => dispatch(actions.getProfile(username)),\r\n        getServices: (username) => dispatch(actions.getServices(username))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Emby);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Badge, Button, Statistic, Form, message, Row, Col, PageHeader, Descriptions, Spin, Input, Switch, Modal, Typography } from 'antd';\r\nimport { PayCircleOutlined, CloseOutlined, CheckOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport * as actions from '../../store/actions/auth';\r\n\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Countdown } = Statistic;\r\nconst { confirm } = Modal;\r\n\r\nclass FileZilla extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n        this.handleSwitch = this.handleSwitch.bind(this);               \r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.timeOver = this.timeOver.bind(this);\r\n    }\r\n\r\n    onFinish = (values) => {                  \r\n        if ( this.props.services.ftp) {            \r\n            message.info('Ya tiene activo el servicio');            \r\n        } else {\r\n            if ( this.props.profile.coins >= 50) {                \r\n                confirm({\r\n                    title: '¿Seguro que desea pagar por FileZilla?',\r\n                    icon: <ExclamationCircleOutlined />,\r\n                    content: 'Son 50 coins por 30 días.',\r\n                    onOk: () => {               \r\n                        axiosInstance\r\n                        .put(`servicios/filezilla/${ this.props.username }/`, {\r\n                            contra: values.contra                                    \r\n                        })\r\n                        .then((response) => {\r\n                            if (response.status === 200) {                        \r\n                                message.success(\"Pago realizado con éxito.\");\r\n                                this.props.getServices(this.props.username); \r\n                                this.props.getProfile(this.props.username); \r\n                                this.setState({ loading:false });                      \r\n                            }\r\n                        })                        \r\n                        .catch((error) => {\r\n                            if (error.response) {\r\n                                if (error.response.status === 500) {\r\n                                    message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                                    this.setState({ loading:false });                        \r\n                                } else {\r\n                                    console.log(error.response);\r\n                                    this.setState({ loading:false });                        \r\n                                }\r\n                            } else {\r\n                                console.log(error);\r\n                                this.setState({ loading:false });                        \r\n                            }                               \r\n                        });\r\n                        this.setState({ loading:true });            \r\n                    }                   \r\n                });            \r\n            } else {               \r\n                message.error('No tiene suficientes coins, por favor recargue')\r\n            }\r\n        }              \r\n    }\r\n\r\n    timeOver = () => {\r\n        axiosInstance\r\n        .put(`servicios/filezilla/${ this.props.username }/`, {\r\n            ftp: false                                 \r\n        })\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                this.props.getServices(this.props.username);\r\n                this.props.getProfile(this.props.username);\r\n                this.setState({ loading:false }); \r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response) {\r\n                if (error.response.status === 500) {\r\n                    message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                    this.setState({ loading:false });                        \r\n                } else {\r\n                    console.log(error.response);\r\n                    this.setState({ loading:false });                        \r\n                }\r\n            } else {\r\n                console.log(error);\r\n                this.setState({ loading:false });                        \r\n            }                               \r\n        });\r\n        this.setState({ loading:true });\r\n    }\r\n\r\n    handleSwitch = (value) => {\r\n        confirm({\r\n            title: '¿Seguro que desea cambiar esta opción?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Si esta activada cuando finalice el tiempo se añadirán 30 días si tiene suficientes coins en la cartera.',\r\n            onOk: () => {\r\n                axiosInstance\r\n                .put(`servicios/filezilla/${ this.props.username }/`, {\r\n                    ftp_auto: value\r\n                })\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        message.success(\"Compra automática cambiada\");\r\n                        this.props.getServices(this.props.username);\r\n                        this.setState({loading: false});                \r\n                    }\r\n                })        \r\n                .catch((error) => {\r\n                    if (error.response) {\r\n                        if (error.response.status === 500) {\r\n                            message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                            this.setState({ loading:false });                        \r\n                        } else {\r\n                            console.log(error.response);\r\n                            this.setState({ loading:false });                        \r\n                        }\r\n                    } else {\r\n                        console.log(error);\r\n                        this.setState({ loading:false });                        \r\n                    }                               \r\n                });\r\n                this.setState({loading: true});\r\n            }\r\n        })    \r\n    }\r\n\r\n    fechaActual = new Date();\r\n    fechaMes = this.fechaActual.setDate(this.fechaActual.getDate() + 30);  \r\n    fechaMes = new Date(this.fechaMes)\r\n\r\n    render () {\r\n        if (this.props.isAuthenticated) {\r\n            return (            \r\n                <Spin tip=\"Cargando...\" spinning={this.state.loading}>\r\n                    <Row style={{ background: 'white', border: 'outset', boxShadow: '0 5px 10px 0' }}>\r\n                        <Col span={12}>                     \r\n                            <Card title=\"FileZilla-FTP\" > \r\n                                <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                    Descarga de contenido desde el servidor. Paquete semanal y otros.<br></br><a href=\"https://qbared.com/ftp/\">Más información, click aquí!!!</a>\r\n                                </Card.Grid>                                          \r\n                                {\r\n                                    this.props.services.ftp ?\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                        <Badge color=\"green\" text=\"Activo\" />\r\n                                        <Countdown title=\"Tiempo restante\" onFinish={this.timeOver} value={this.props.services.ftp_time} format=\"d:D-HH:mm:ss\" />\r\n                                    </Card.Grid>\r\n                                    :\r\n                                    <Card.Grid style={{ width: '100%', textAlign: 'center'}}>\r\n                                        <Badge color=\"red\" text=\"No Activo\" />\r\n                                    </Card.Grid> \r\n                                }                                                       \r\n                            </Card>  \r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form onFinish={this.onFinish}> \r\n                            <PageHeader title=\"Detalles:\" extra={                  \r\n                                    <Form.Item >\r\n                                        <Button htmlType=\"submit\" type=\"primary\">Pagar</Button>\r\n                                    </Form.Item>}> \r\n                                <Descriptions>\r\n                                    <Descriptions.Item style={{width: '100%' }}>\r\n                                        <Switch checkedChildren={<CheckOutlined />} unCheckedChildren={<CloseOutlined />} checked={ this.props.services.ftp_auto } onChange={ this.handleSwitch }/>\r\n                                    </Descriptions.Item>\r\n                                </Descriptions>\r\n                                <Descriptions>\r\n                                    <Descriptions.Item style={{width: '100%' }}>    \r\n                                        <Title style={{width: '30%'}} level={5}>Pago automático</Title>\r\n                                        <Text style={{width: '70%'}}>*Tip: Active esta opción y cuando acabe su tiempo se le pagará automáticamente si tiene suficientes coins en la cartera.</Text>                     \r\n                                    </Descriptions.Item>\r\n                                </Descriptions>\r\n                                <Descriptions>                                \r\n                                    <Descriptions.Item label=\"Desde\" style={{width: '50%' }}>{new Date().toLocaleString()}</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"Hasta\" style={{width: '50%' }}>{this.fechaMes.toLocaleString()}</Descriptions.Item>                            \r\n                                </Descriptions>\r\n                                <Statistic style={{textAlign: 'right'}} prefix={<PayCircleOutlined />} title=\"Precio:\" value=\"50\" />              \r\n                                <Form.Item name=\"contra\" label=\"Contraseña: \" rules={[{required: true, message: 'Escriba una contraseña'}]} >\r\n                                    <Input.Password placeholder=\"Escriba su contraseña\"/>\r\n                                </Form.Item>\r\n                            </PageHeader>\r\n                            </Form>                    \r\n                        </Col>                                           \r\n                    </Row>\r\n                </Spin> \r\n            )\r\n        } else {\r\n            return <Redirect to='/portal/login/' />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n        username: state.username,\r\n        isAuthenticated: state.token !== null,\r\n        loading: state.loading,\r\n        profile: state.profile,\r\n        user: state.user,\r\n        services: state.services\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProfile: (username) => dispatch(actions.getProfile(username)),\r\n        getServices: (username) => dispatch(actions.getServices(username))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileZilla);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport { Divider, Form, Input, Button, Row, Col, message, Statistic, Spin } from 'antd';\r\nimport { PayCircleOutlined } from '@ant-design/icons';\r\nimport * as actions from '../../store/actions/auth';\r\n\r\n\r\nclass Recarga extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }      \r\n        this.onFinish = this.onFinish.bind(this);\r\n    }\r\n\r\n    onFinish = (values) => {        \r\n        if (values.code.length === 8) {       \r\n            axiosInstance\r\n            .post(`servicios/recarga/${ values.code }/`, {\r\n                usuario: this.props.username,                       \r\n            })\r\n            .then((response) => {\r\n                if (response.status === 200) {  \r\n                    this.setState({loading: false});                                     \r\n                    message.success(response.data.mensaje); \r\n                    this.props.getProfile(this.props.username);                  \r\n                } else if (response.status === 203) {\r\n                    this.setState({loading: false});    \r\n                    message.error(response.data.mensaje);                                      \r\n                } else if (response.status === 208) {  \r\n                    this.setState({loading: false});                 \r\n                    message.error(response.data.mensaje);                                     \r\n                }\r\n            })           \r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    if (error.response.status === 500) {\r\n                        message.error(\"Error del servidor, vuelva a intentarlo.\"); \r\n                        this.setState({loading: false});                                          \r\n                    } else {\r\n                        console.log(error.response);\r\n                        this.setState({loading: false});                      \r\n                    }\r\n                } else {\r\n                    console.log(error);\r\n                    this.setState({loading: false});                    \r\n                }                               \r\n            })\r\n            this.setState({loading: true})          \r\n        } else {            \r\n            message.error(\"Escriba 8 números.\");           \r\n        }\r\n    };    \r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return(\r\n                <>\r\n                <Divider orientation=\"center\">Recargar cuenta:</Divider>\r\n                <Spin tip=\"Cargando...\" spinning={this.state.loading}>\r\n                <Row>\r\n                    <Col span={12} offset={6} style={{ maxWidth: '300px', margin: 'auto', background: 'white', padding: '15px', border: 'outset', boxShadow: '0 5px 10px 0' }}>\r\n                        <Statistic style={{textAlign: 'center'}} prefix={<PayCircleOutlined />} title=\"Mis Coins:\" value={this.props.profile.coins } />\r\n                        <Divider></Divider>\r\n                        <Form onFinish={this.onFinish}>                      \r\n                            <Form.Item name=\"code\" label=\"Código\" rules={[{ required: true, message: \"Escriba el número de la recarga.\" }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item style={{textAlign: 'right'}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">Enviar</Button>\r\n                            </Form.Item> \r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n                </Spin>                       \r\n                </>\r\n            )\r\n        } else {\r\n            return <Redirect to='/portal/login/' />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n        username: state.username,              \r\n        isAuthenticated: state.token !== null,\r\n        profile: state.profile,       \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProfile: (username) => dispatch(actions.getProfile(username))        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Recarga);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport { Divider, Form, Input, InputNumber, Button, Row, Col, message, Spin, Statistic, Modal } from 'antd';\r\nimport { PayCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport * as actions from '../../store/actions/auth';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst layout = {\r\n    labelCol: { span: 12 },\r\n    wrapperCol: { span: 12 },\r\n};\r\n\r\n\r\nclass Transfer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {          \r\n            loading : false       \r\n        };             \r\n        this.onFinish = this.onFinish.bind(this);        \r\n    }\r\n\r\n    onFinish = (values) => {        \r\n        if (this.props.username === values.usuario) {           \r\n            message.error(\"No puede ser su mismo usuario.\");           \r\n        } else if ( values.cantidad < 19 ) {            \r\n            message.error(\"Mínimo 20 coins.\");            \r\n        }\r\n        else {\r\n            axiosInstance\r\n                .get(`servicios/transfer/${ values.usuario }/`)\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        confirm({\r\n                            title: `¿Seguro que desea transferir ${ values.cantidad } coins a ${ values.usuario }?`,\r\n                            icon: <ExclamationCircleOutlined />,\r\n                            content: 'La transferencia es permanente, no tiene devolución.',\r\n                            onOk: () => {                    \r\n                                if ( this.props.profile.coins >= values.cantidad) {\r\n                                    axiosInstance\r\n                                    .post(`servicios/transfer/${ this.props.username }/`, {\r\n                                        'usuario' : values.usuario,\r\n                                        'cantidad': values.cantidad\r\n                                    })\r\n                                    .then((res) => {\r\n                                        if ( res.status === 200) {                                \r\n                                            message.success(res.data.mensaje);                                \r\n                                            this.props.getProfile(this.props.username); \r\n                                            this.setState({loading: false});                                                   \r\n                                        }\r\n                                    })                       \r\n                                    .catch((error) => {\r\n                                        if (error.response) {                                \r\n                                            if (error.response.status === 500) {\r\n                                                message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                                                this.setState({loading: false});                                                      \r\n                                            } else {\r\n                                                console.log(error.response);\r\n                                                this.setState({loading: false});                                    \r\n                                            }\r\n                                        } else {\r\n                                            console.log(error);\r\n                                            this.setState({loading: false});                             \r\n                                        }                               \r\n                                    });\r\n                                    this.setState({loading: true});                                               \r\n                                } else {                        \r\n                                    message.error(\"No tiene suficientes coins.\")\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    if (error.response) {\r\n                        if (error.response.status === 404) {\r\n                            message.error(\"Usuario no existe\");\r\n                            this.setState({loading: false});                                         \r\n                        } else if (error.response.status === 500) {\r\n                            message.error(\"Error del servidor, vuelva a intentarlo.\");\r\n                            this.setState({loading: false});                                            \r\n                        } else {\r\n                            console.log(error.response);\r\n                            this.setState({loading: false});                       \r\n                        }\r\n                    } else {\r\n                        console.log(error);\r\n                        this.setState({loading: false});                   \r\n                    }                                               \r\n                })\r\n                this.setState({loading: true});\r\n        }        \r\n    }\r\n\r\n    render () {\r\n        if (this.props.isAuthenticated) {  \r\n            return(\r\n                <>\r\n                <Divider orientation=\"center\">Transferir Coins:</Divider>  \r\n                <Spin tip=\"Cargando...\" spinning={this.state.loading}>          \r\n                <Row>                \r\n                    <Col span={12} offset={6} style={{ maxWidth: '400px', margin: 'auto', background: 'white', padding: '15px', border: 'outset', boxShadow: '0 5px 10px 0' }}>\r\n                        <Statistic style={{textAlign: 'center'}} prefix={<PayCircleOutlined />} title=\"Mis Coins:\" value={this.props.profile.coins } />\r\n                        <Divider orientation=\"center\"></Divider> \r\n                        <Form {...layout} onFinish={this.onFinish}>\r\n                            <Form.Item name=\"usuario\" label=\"Hacia el Usuario\" rules={[{ required: true, message: \"Escriba el usuario de destino.\" }]}>\r\n                                <Input />\r\n                            </Form.Item>                       \r\n                            <Form.Item name=\"cantidad\" label=\"Cantidad\" rules={[{ required: true, message: \"Escriba la cantidad que va a enviar.\" }]}>\r\n                                <InputNumber />\r\n                            </Form.Item>\r\n                            <Form.Item style={{textAlign: 'right'}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">Transferir</Button>\r\n                            </Form.Item> \r\n                        </Form>                    \r\n                    </Col>                \r\n                </Row>\r\n                </Spin>\r\n                </>\r\n            )\r\n        } else {\r\n            return <Redirect to='/portal/login/' />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n        username: state.username,\r\n        isAuthenticated: state.token !== null,\r\n        profile: state.profile,        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProfile: (username) => dispatch(actions.getProfile(username))        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transfer);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Divider, message, Spin } from 'antd';\r\n\r\nclass UltOpe extends React.Component {\r\n    state = {\r\n        opers : [], \r\n        loading: true       \r\n    };\r\n\r\n    columns = [\r\n        {\r\n            title: 'Code',\r\n            dataIndex: 'code',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'Tipo',\r\n            dataIndex: 'tipo',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: '# Recarga',\r\n            dataIndex: 'codRec',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'Servicio',\r\n            dataIndex: 'servicio',\r\n            width: 90,\r\n        },\r\n        {\r\n            title: 'Cantidad',\r\n            dataIndex: 'cantidad',\r\n            width: 70,           \r\n        },\r\n        {\r\n            title: 'Hacia/Desde',\r\n            dataIndex: 'haciaDesde',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'Fecha',\r\n            dataIndex: 'fecha',\r\n            width: 100,\r\n        },      \r\n    ];\r\n\r\n    componentDidMount() {\r\n        axiosInstance\r\n        .get(`servicios/operaciones/${ this.props.username }/`)\r\n        .then((res) => {\r\n            this.setState({\r\n                opers: res.data,\r\n                loading: false                \r\n            })                       \r\n        })\r\n        .catch((error) => {            \r\n            if (error.response) {\r\n                if (error.response.status === 500) {                               \r\n                message.error(\"ERROR DEL SERVIDOR\")                          \r\n            }\r\n            this.setState({loading: false});\r\n        }});\r\n    }\r\n\r\n    render () {\r\n        if (this.props.isAuthenticated) { \r\n            return(\r\n                <>\r\n                <Divider orientation=\"center\">Ultimas 10 Operaciones</Divider>\r\n                <Spin tip=\"Buscando...\" spinning={this.state.loading}>             \r\n                <Table style={{ background: 'white', border: 'outset', boxShadow: '0 5px 10px 0' }} columns={this.columns} dataSource={this.state.opers}/> \r\n                </Spin>                      \r\n                <Divider></Divider> \r\n            </>\r\n            )\r\n        } else {\r\n            return <Redirect to='/portal/login/' />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {  \r\n        isAuthenticated: state.token !== null,    \r\n        username: state.username,\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(UltOpe);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Lobby from './components/Lobby';\r\nimport Chat from './components/Chat';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport ResetPass from './components/users/ResetPass';\r\nimport NewPass from './components/users/NewPass';\r\nimport Perfil from './components/users/datosPerfil';\r\nimport Internet from './components/servicios/internet';\r\nimport JovenClub from './components/servicios/jovenClub';\r\nimport Emby from './components/servicios/emby';\r\nimport FileZilla from './components/servicios/fileZilla';\r\nimport Recarga from './components/coins/Recarga';\r\nimport Transfer from './components/coins/Transfer';\r\nimport UltimasOp from './components/coins/UltOpe';\r\n\r\nconst BaseRouter = () => {\r\n    return(\r\n        <div>\r\n            <Route exact path='/portal/' component={Lobby} />\r\n            <Route exact path='/portal/login/' component={Login} />\r\n            <Route exact path='/portal/register/' component={Signup} />\r\n            <Route exact path='/portal/resetpassword/' component={ResetPass} />\r\n            <Route exact path='/portal/password-reset/confirm/:uid/:token/' component={NewPass} />\r\n            <Route exact path='/chat/:chatID/' component={Chat} />\r\n            <Route exact path='/portal/perfil/datos/' component={Perfil} />\r\n            <Route exact path='/portal/servicios/internet/' component={Internet} />\r\n            <Route exact path='/portal/servicios/joven-club/' component={JovenClub} />\r\n            <Route exact path='/portal/servicios/emby/' component={Emby} />\r\n            <Route exact path='/portal/servicios/ftp/' component={FileZilla} />\r\n            <Route exact path='/portal/coins/recarga/' component={Recarga} />\r\n            <Route exact path='/portal/coins/transferir/' component={Transfer} />\r\n            <Route exact path='/portal/coins/ultimasop/' component={UltimasOp} />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseRouter;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu  } from 'antd';\r\nimport { LaptopOutlined, PayCircleOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nconst {  Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass SidePanel extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <Sider \r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                width={200} className=\"site-layout-background\">                \r\n                <Menu\r\n                    theme={this.props.theme}\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1', 'sub2', 'sub3']}\r\n                    style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                    <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\" Perfil\">\r\n                    <Menu.Item key=\"1\"><Link to=\"/portal/perfil/datos/\">Mi Perfil</Link></Menu.Item>                                                  \r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Servicios\">\r\n                    <Menu.Item key=\"3\"><Link to=\"/portal/servicios/internet/\">Internet</Link></Menu.Item>\r\n                    <Menu.Item key=\"4\"><Link to=\"/portal/servicios/joven-club/\">Joven Club</Link></Menu.Item>\r\n                    <Menu.Item key=\"5\"><Link to=\"/portal/servicios/emby/\">Emby</Link></Menu.Item>\r\n                    <Menu.Item key=\"6\"><Link to=\"/portal/servicios/ftp/\">FileZilla</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub3\" icon={<PayCircleOutlined />} title=\"Mis Coins\">\r\n                    <Menu.Item key=\"7\"><Link to=\"/portal/coins/recarga/\">Recargar</Link></Menu.Item>\r\n                    <Menu.Item key=\"8\"><Link to=\"/portal/coins/transferir/\">Transferir</Link></Menu.Item> \r\n                    <Menu.Item key=\"9\"><Link to=\"/portal/coins/ultimasop/\">Ultimas Operaciones</Link></Menu.Item>                                \r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidePanel;","import React from 'react';\r\nimport { Layout, Menu, Switch, Divider, Badge, Typography, Avatar } from 'antd';\r\nimport { PayCircleOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nimport Sidepanel from './Sidepanel';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Text } = Typography;\r\n\r\nclass CustomLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {             \r\n            theme: 'dark',                     \r\n        }\r\n        this.changeTheme = this.changeTheme.bind(this);        \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated && this.props.profile === {}) {\r\n            this.props.getProfile(this.props.username)\r\n            this.props.getServices(this.props.username)\r\n        }\r\n    }\r\n\r\n    changeTheme = value => {\r\n        this.setState({\r\n          theme: value ? 'dark' : 'light',\r\n        });\r\n    };\r\n  \r\n    render() {\r\n        return(\r\n            <Layout className=\"layout\">\r\n                <Header>\r\n                    <Menu theme={ this.state.theme } mode=\"horizontal\" defaultSelectedKeys={['1']} style={{fontSize: '15px', width: '100%'}}>\r\n                    <Menu.Item><Switch checked={this.state.theme === 'dark'} onChange={this.changeTheme}\r\n                    checkedChildren=\"Oscuro\"\r\n                    unCheckedChildren=\"Claro\"\r\n                    /></Menu.Item>\r\n                    <Menu.Item key=\"1\"><a href=\"https://qbared.com\">QbaRed</a></Menu.Item>                                \r\n                    {\r\n                        this.props.isAuthenticated ?\r\n                        <Menu.Item key=\"2\" onClick={this.props.logout}>Salir</Menu.Item>                   \r\n                        :\r\n                        <>\r\n                        <Menu.Item key=\"2\"><Link to=\"/portal/login/\">Entrar</Link></Menu.Item>                 \r\n                        <Menu.Item key=\"3\"><Link to=\"/portal/register/\">Registrarse</Link></Menu.Item>\r\n                        </>            \r\n                    }\r\n                    {\r\n                        this.props.isAuthenticated ?               \r\n                        <span style={{float: 'right', paddingRight: 40}}> \r\n                            <Link to=\"/portal/perfil/datos\">                 \r\n                                <Text type=\"success\">{ this.props.username }</Text>\r\n                            </Link> \r\n                            <Divider type='vertical' ></Divider>\r\n                            <Link to=\"/portal/coins/recarga/\">                \r\n                                <Badge count={this.props.profile.coins} overflowCount={9999} style={{ backgroundColor: '#52c41a' }}/>\r\n                            </Link>\r\n                            <PayCircleOutlined />\r\n                            <Divider type=\"vertical\"></Divider>\r\n                            <Link to=\"/portal/coins/ultimasop/\">\r\n                                <Badge count={ this.props.profile.notificaciones ? this.props.profile.notificaciones.length : 0 } overflowCount={24}>\r\n                                    <Avatar size={40} src={ this.props.profile.imagen } icon={<UserOutlined />}/>\r\n                                </Badge>\r\n                            </Link>\r\n                        </span> \r\n                        :\r\n                        null\r\n                    }                           \r\n                    </Menu>                                          \r\n                </Header>\r\n                <Layout style={{ background: 'rgb(220, 230, 250)' }}>\r\n                    {\r\n                        this.props.isAuthenticated ?\r\n                        <Sidepanel theme={ this.state.theme }/>\r\n                        :\r\n                        null           \r\n                    } \r\n                    <Content className=\"site-layout-background\" style={{ padding: 10, margin: 10}}>                \r\n                        <div style={{ background: 'rgb(220, 230, 250)', padding: 24, minHeight: 280 }}>\r\n                            {this.props.children}\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n                <Footer style={{ background: 'rgb(16, 29, 56)', textAlign: 'center', position: 'fixed', bottom: '0px', width: '100%', fontSize: '20px', color: 'white', fontStyle: 'italic' }}>QbaRed_Portal del Usuario-v2.1 2019-2021</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {      \r\n        username: state.username,\r\n        isAuthenticated: state.token !== null,\r\n        profile: state.profile,\r\n        services: state.services\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      logout: () => dispatch(actions.logout()),\r\n      getProfile: (username) => dispatch(actions.getProfile(username)),\r\n      getServices: (username) => dispatch(actions.getServices(username))\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CustomLayout));\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as actions from './store/actions/auth';\nimport 'antd/dist/antd.css';\n\nimport BaseRouter from './routes';\nimport CustomLayout from './components/Layout';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n    \n  }\n\n  render() {\n    return(\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n              <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    username: null,\r\n    error: null,\r\n    loading: false,\r\n    profile: {},\r\n    services: {}\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    })\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,\r\n        username: action.username,\r\n        error: null,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        username: null\r\n    })\r\n}\r\n\r\nconst getProfile = (state, action) => {\r\n    return updateObject(state, {\r\n        profile: action.profile\r\n    })\r\n}\r\n\r\nconst getServices = (state, action) => {\r\n    return updateObject(state, {\r\n        services: action.services\r\n    })\r\n}\r\n\r\nconst stopErase = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null\r\n    })\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.GET_PROFILE: return getProfile(state, action);\r\n        case actionTypes.GET_SERVICES: return getServices(state, action);\r\n        case actionTypes.STOP_ERASE: return stopErase(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducers/auth';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk)\n))\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById(\"root\"));"],"sourceRoot":""}